/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as LayoutPatientImport } from './routes/_layout/patient'
import { Route as LayoutHomepageImport } from './routes/_layout/homepage'
import { Route as LayoutCustomerImport } from './routes/_layout/customer'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as LayoutDashboardIndexImport } from './routes/_layout/dashboard/index'
import { Route as LayoutRegistrationPatientImport } from './routes/_layout/registration/patient'
import { Route as LayoutDatabasePackageImport } from './routes/_layout/database/package'

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutPatientRoute = LayoutPatientImport.update({
  id: '/patient',
  path: '/patient',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutHomepageRoute = LayoutHomepageImport.update({
  id: '/homepage',
  path: '/homepage',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutCustomerRoute = LayoutCustomerImport.update({
  id: '/customer',
  path: '/customer',
  getParentRoute: () => LayoutRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const LayoutDashboardIndexRoute = LayoutDashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutRegistrationPatientRoute = LayoutRegistrationPatientImport.update({
  id: '/registration/patient',
  path: '/registration/patient',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDatabasePackageRoute = LayoutDatabasePackageImport.update({
  id: '/database/package',
  path: '/database/package',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/_layout/customer': {
      id: '/_layout/customer'
      path: '/customer'
      fullPath: '/customer'
      preLoaderRoute: typeof LayoutCustomerImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/homepage': {
      id: '/_layout/homepage'
      path: '/homepage'
      fullPath: '/homepage'
      preLoaderRoute: typeof LayoutHomepageImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/patient': {
      id: '/_layout/patient'
      path: '/patient'
      fullPath: '/patient'
      preLoaderRoute: typeof LayoutPatientImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/database/package': {
      id: '/_layout/database/package'
      path: '/database/package'
      fullPath: '/database/package'
      preLoaderRoute: typeof LayoutDatabasePackageImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/registration/patient': {
      id: '/_layout/registration/patient'
      path: '/registration/patient'
      fullPath: '/registration/patient'
      preLoaderRoute: typeof LayoutRegistrationPatientImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/dashboard/': {
      id: '/_layout/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof LayoutDashboardIndexImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutCustomerRoute: typeof LayoutCustomerRoute
  LayoutHomepageRoute: typeof LayoutHomepageRoute
  LayoutPatientRoute: typeof LayoutPatientRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutDatabasePackageRoute: typeof LayoutDatabasePackageRoute
  LayoutRegistrationPatientRoute: typeof LayoutRegistrationPatientRoute
  LayoutDashboardIndexRoute: typeof LayoutDashboardIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutCustomerRoute: LayoutCustomerRoute,
  LayoutHomepageRoute: LayoutHomepageRoute,
  LayoutPatientRoute: LayoutPatientRoute,
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutDatabasePackageRoute: LayoutDatabasePackageRoute,
  LayoutRegistrationPatientRoute: LayoutRegistrationPatientRoute,
  LayoutDashboardIndexRoute: LayoutDashboardIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/login': typeof authLoginRoute
  '/customer': typeof LayoutCustomerRoute
  '/homepage': typeof LayoutHomepageRoute
  '/patient': typeof LayoutPatientRoute
  '/': typeof LayoutIndexRoute
  '/database/package': typeof LayoutDatabasePackageRoute
  '/registration/patient': typeof LayoutRegistrationPatientRoute
  '/dashboard': typeof LayoutDashboardIndexRoute
}

export interface FileRoutesByTo {
  '/login': typeof authLoginRoute
  '/customer': typeof LayoutCustomerRoute
  '/homepage': typeof LayoutHomepageRoute
  '/patient': typeof LayoutPatientRoute
  '/': typeof LayoutIndexRoute
  '/database/package': typeof LayoutDatabasePackageRoute
  '/registration/patient': typeof LayoutRegistrationPatientRoute
  '/dashboard': typeof LayoutDashboardIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/_layout/customer': typeof LayoutCustomerRoute
  '/_layout/homepage': typeof LayoutHomepageRoute
  '/_layout/patient': typeof LayoutPatientRoute
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/database/package': typeof LayoutDatabasePackageRoute
  '/_layout/registration/patient': typeof LayoutRegistrationPatientRoute
  '/_layout/dashboard/': typeof LayoutDashboardIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/customer'
    | '/homepage'
    | '/patient'
    | '/'
    | '/database/package'
    | '/registration/patient'
    | '/dashboard'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/customer'
    | '/homepage'
    | '/patient'
    | '/'
    | '/database/package'
    | '/registration/patient'
    | '/dashboard'
  id:
    | '__root__'
    | '/_layout'
    | '/(auth)/login'
    | '/_layout/customer'
    | '/_layout/homepage'
    | '/_layout/patient'
    | '/_layout/'
    | '/_layout/database/package'
    | '/_layout/registration/patient'
    | '/_layout/dashboard/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
  authLoginRoute: typeof authLoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
  authLoginRoute: authLoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout",
        "/(auth)/login"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/customer",
        "/_layout/homepage",
        "/_layout/patient",
        "/_layout/",
        "/_layout/database/package",
        "/_layout/registration/patient",
        "/_layout/dashboard/"
      ]
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx"
    },
    "/_layout/customer": {
      "filePath": "_layout/customer.tsx",
      "parent": "/_layout"
    },
    "/_layout/homepage": {
      "filePath": "_layout/homepage.tsx",
      "parent": "/_layout"
    },
    "/_layout/patient": {
      "filePath": "_layout/patient.tsx",
      "parent": "/_layout"
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/database/package": {
      "filePath": "_layout/database/package.tsx",
      "parent": "/_layout"
    },
    "/_layout/registration/patient": {
      "filePath": "_layout/registration/patient.tsx",
      "parent": "/_layout"
    },
    "/_layout/dashboard/": {
      "filePath": "_layout/dashboard/index.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
